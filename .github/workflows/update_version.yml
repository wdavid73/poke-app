name: Update Version

on:
  push:
    branches:
      - master
  
jobs:
    update_version:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v2

        - name: Set up Python
          uses: actions/setup-python@v2
          with:
            python-version: '3.x'

        - name: Install jq
          run: sudo apt-get install jq
          
        - name: Install bumpversion
          run: pip install bumpversion
        - name: Configure Git author identity
          run: |
            git config --global user.email "wdavidw26@gmail.com"
            git config --global user.name "Wilson Padilla"
            cd ${{ github.workspace }}
            git checkout master


        - name: Check commit message
          id: check_commit
          run: |
            # Analiza los mensajes de confirmación
            bump_level=none # Por defecto

            keywords_config=$(cat commit_keywords.json)

            last_commit_message=$(git log -1 --pretty=%B)

            echo "$last_commit_message"

            for keyword in $(echo $keywords_config | jq -r 'keys[]'); do
              echo "$keyword"
              if echo "$last_commit_message" | grep -q "$keyword"; then
                bump_level=$(echo $keywords_config | jq -r "$keyword")
                break  # Detener la búsqueda en cuanto se encuentra una coincidencia
              fi
            done

            echo "Increment version of $bump_level"
            echo "BUMP_LEVEL=$bump_level" >> $GITHUB_ENV
          shell: bash

        - name: Bump version
          if : env.BUMP_LEVEL != 'none'
          run: |
            cd ${{ github.workspace }}
            bumpversion ${{ env.BUMP_LEVEL }}
          continue-on-error: true # Continuar incluso si no se encuentra una coincidencia

        - name: Create bumpversion.log
          run: touch ${{ github.workspace }}/bumpversion.log

        - name: Commit and push changes
          run: |
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git push
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

