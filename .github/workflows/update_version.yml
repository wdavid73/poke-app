name: Update Version

on:
  push:
    branches:
      - master
  
jobs:
    update_version:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v2

        - name: Set up Python
          uses: actions/setup-python@v2
          with:
            python-version: '3.x'

        - name: Install bumpversion
          run: pip install bumpversion
        - name: Configure Git author identity
          run: |
            git config --global user.email "wdavidw26@gmail.com"
            git config --global user.name "Wilson Padilla"
            cd ${{ github.workspace }}
            git checkout master


        - name: Check commit message
          id: check_commit
          run: |
            # Analiza los mensajes de confirmación
            bump_level=none # Por defecto

            # Lista de palabras clave
            keywords=("fix" "feat" "breaking" "redesign" "hotfix" "sparkles" "ambulance" "bug" "adhesive_bandage" "new_version", "Merge", "merge")

            last_commit_message=$(git log -1 --pretty=%B)

            for keyword in "${keywords[@]}"; do
              if echo "$last_commit_message" | grep -q "$keyword"; then
                if [ "$keyword" == "fix" ] || [ "$keyword" == "hotfix" ] || [ "$keyword" == "bug" ] || [ "$keyword" == "adhesive_bandage" ]; then
                  bump_level="patch"  # Incremento de versión de tipo patch para "fix" o "hotfix"
                elif [ "$keyword" == "feat" ] || [ "$keyword" == "sparkles" ] || [ "$keyword" == "redesign" ] || [ "$keyword" == "Merge" ] || [ "$keyword" == "merge" ]; then
                  bump_level="minor"  # Incremento de versión de tipo minor para "feat"
                elif [ "$keyword" == "breaking" ] || [ "$keyword" == "new_version" ]; then
                  bump_level="major"  # Incremento de versión de tipo major para "breaking"
                fi
                break  # Detén la búsqueda en cuanto se encuentra una coincidencia
              fi
            done

            echo "Increment version of $bump_level"
            echo "BUMP_LEVEL=$bump_level" >> $GITHUB_ENV
          shell: bash

        - name: Bump version
          if : env.BUMP_LEVEL != 'none'
          run: |
            cd ${{ github.workspace }}
            bumpversion ${{ env.BUMP_LEVEL }}
          continue-on-error: true # Continuar incluso si no se encuentra una coincidencia

        - name: Create bumpversion.log
          run: touch ${{ github.workspace }}/bumpversion.log

        - name: Commit and push changes
          run: |
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git push
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

